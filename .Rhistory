View(dtest)
View(dtest)
dataset <- read.csv("healt_data.csv")
has_disease <- subset(dataset, dataset$heart_disease == 1)
dataset<-dataset[!(health_data$gender=="Other"),]
lm_dataset <- subset(dataset, age > 18)
split <- round(nrow(lm_dataset) * 0.80)
dtrain <- lm_dataset[1: split, ]
dtest <- lm_dataset[(split + 1):nrow(lm_dataset), ]
lmObj <- glm(heart_disease ~ ever_married + gender + age + work_type ,family="binomial", data = dtrain)
summary(lmObj)
options(scipen=999)
pscl::pR2(lmObj)["McFadden"]
caret::varImp(lmObj)
dtest$predict <- predict(lmObj, newdata = dtest, type="response")
dtrain$predict <- predict(lmObj, newdata = dtrain, type="response")
View(dtest)
View(dtest)
dataset <- read.csv("healt_data.csv")
has_disease <- subset(dataset, dataset$heart_disease == 1)
dataset<-dataset[!(health_data$gender=="Other"),]
lm_dataset <- subset(dataset, age > 18)
split <- round(nrow(lm_dataset) * 0.80)
dtrain <- lm_dataset[1: split, ]
dtest <- lm_dataset[(split + 1):nrow(lm_dataset), ]
lmObj <- glm(heart_disease ~ gender + age + ever_married +avg_glucose_level ,family="binomial", data = dtrain)
summary(lmObj)
options(scipen=999)
pscl::pR2(lmObj)["McFadden"]
caret::varImp(lmObj)
dtest$predict <- predict(lmObj, newdata = dtest, type="response")
dtrain$predict <- predict(lmObj, newdata = dtrain, type="response")
View(dtest)
View(dtest)
dataset <- read.csv("healt_data.csv")
has_disease <- subset(dataset, dataset$heart_disease == 1)
dataset<-dataset[!(health_data$gender=="Other"),]
lm_dataset <- subset(dataset, age > 18)
split <- round(nrow(lm_dataset) * 0.80)
dtrain <- lm_dataset[1: split, ]
dtest <- lm_dataset[(split + 1):nrow(lm_dataset), ]
lmObj <- glm(heart_disease ~ gender + age + ever_married + avg_glucose_level + bmi  ,family="binomial", data = dtrain)
summary(lmObj)
options(scipen=999)
pscl::pR2(lmObj)["McFadden"]
caret::varImp(lmObj)
dtest$predict <- predict(lmObj, newdata = dtest, type="response")
dtrain$predict <- predict(lmObj, newdata = dtrain, type="response")
View(dtest)
View(dtest)
dataset <- read.csv("healt_data.csv")
has_disease <- subset(dataset, dataset$heart_disease == 1)
dataset<-dataset[!(health_data$gender=="Other"),]
lm_dataset <- subset(dataset, age > 18)
split <- round(nrow(lm_dataset) * 0.80)
dtrain <- lm_dataset[1: split, ]
dtest <- lm_dataset[(split + 1):nrow(lm_dataset), ]
lmObj <- glm(heart_disease ~ gender + age + avg_glucose_level + bmi  ,family="binomial", data = dtrain)
summary(lmObj)
options(scipen=999)
pscl::pR2(lmObj)["McFadden"]
caret::varImp(lmObj)
dtest$predict <- predict(lmObj, newdata = dtest, type="response")
dtrain$predict <- predict(lmObj, newdata = dtrain, type="response")
View(dtest)
View(dtest)
caret::varImp(lmObj)
dataset <- read.csv("healt_data.csv")
has_disease <- subset(dataset, dataset$heart_disease == 1)
dataset<-dataset[!(health_data$gender=="Other"),]
lm_dataset <- subset(dataset, age > 18)
split <- round(nrow(lm_dataset) * 0.80)
install.packages("caret")
install.packages("caret")
install.packages("dplyr")
install.packages("data.table")
install.packages("ggplot2")
install.packages("lattice")
install.packages("pscl")
library(dplyr)
library(lattice)
library(ggplot2)
library(data.table)
library(caret)
library(pscl)
dataset <- read.csv("healt_data.csv")
has_disease <- subset(dataset, dataset$heart_disease == 1)
dataset<-dataset[!(health_data$gender=="Other"),]
has_disease <- subset(dataset, dataset$heart_disease == 1)
dataset<-dataset[!(health_data$gender=="Other"),]
dataset <- read.csv("healt_data.csv")
has_disease <- subset(dataset, dataset$heart_disease == 1)
dataset<-dataset[!(dataset$gender=="Other"),]
lm_dataset <- subset(dataset, age > 18)
split <- round(nrow(lm_dataset) * 0.80)
dtrain <- lm_dataset[1: split, ]
dtest <- lm_dataset[(split + 1):nrow(lm_dataset), ]
lmObj <- glm(heart_disease ~ gender + age + avg_glucose_level + bmi  ,family="binomial", data = dtrain)
summary(lmObj)
options(scipen=999)
pscl::pR2(lmObj)["McFadden"]
caret::varImp(lmObj)
dtest$predict <- predict(lmObj, newdata = dtest, type="response")
dtrain$predict <- predict(lmObj, newdata = dtrain, type="response")
View(dtest)
View(dtest)
View(dtrain)
View(dtrain)
dataset <- read.csv("healt_data.csv")
has_disease <- subset(dataset, dataset$heart_disease == 1)
dataset<-dataset[!(dataset$gender=="Other"),]
lm_dataset <- subset(dataset, age > 18)
split <- round(nrow(lm_dataset) * 0.80)
dtrain <- lm_dataset[1: split, ]
dtest <- lm_dataset[(split + 1):nrow(lm_dataset), ]
lmObj <- glm(heart_disease ~ gender + age + avg_glucose_level + bmi  ,family="binomial", data = dtrain)
summary(lmObj)
options(scipen=999)
pscl::pR2(lmObj)["McFadden"]
caret::varImp(lmObj)
dtest$predict <- predict(lmObj, newdata = dtest, type="response")
dtrain$predict <- predict(lmObj, newdata = dtrain, type="response")
dataset <- read.csv("healt_data.csv")
has_disease <- subset(dataset, dataset$heart_disease == 1)
dataset<-dataset[!(dataset$gender=="Other"),]
lm_dataset <- subset(dataset, age > 18)
split <- round(nrow(lm_dataset) * 0.80)
dtrain <- lm_dataset[1: split, ]
dtest <- lm_dataset[(split + 1):nrow(lm_dataset), ]
lmObj <- glm(heart_disease ~ gender + age + avg_glucose_level + bmi + ever_married  ,family="binomial", data = dtrain)
summary(lmObj)
options(scipen=999)
pscl::pR2(lmObj)["McFadden"]
caret::varImp(lmObj)
dtest$predict <- predict(lmObj, newdata = dtest, type="response")
dtrain$predict <- predict(lmObj, newdata = dtrain, type="response")
normal_class <- ifelse(dtest$heart_disease == 1, "Yes","No")
predicted_class <- ifelse(dtest$predict>0.3, "Yes","No")
normal_class <- ifelse(dtest$heart_disease == 1, "Yes","No")
performance_data<-data.frame(observed=normal_class,
predicted= predicted_class)
dataset <- read.csv("healt_data.csv")
has_disease <- subset(dataset, dataset$heart_disease == 1)
dataset<-dataset[!(dataset$gender=="Other"),]
lm_dataset <- subset(dataset, age > 18)
split <- round(nrow(lm_dataset) * 0.80)
dtrain <- lm_dataset[1: split, ]
dtest <- lm_dataset[(split + 1):nrow(lm_dataset), ]
lmObj <- glm(heart_disease ~ gender + age + avg_glucose_level + bmi + ever_married  ,family="binomial", data = dtrain)
summary(lmObj)
options(scipen=999)
pscl::pR2(lmObj)["McFadden"]
caret::varImp(lmObj)
dtest$predict <- predict(lmObj, newdata = dtest, type="response")
dtrain$predict <- predict(lmObj, newdata = dtrain, type="response")
predicted_class <- ifelse(dtest$predict>0.3, "Yes","No")
normal_class <- ifelse(dtest$heart_disease == 1, "Yes","No")
performance_data<-data.frame(observed=normal_class,
predicted= predicted_class)
positive <- sum(performance_data$observed=="Yes")
negative <- sum(performance_data$observed=="No")
predicted_positive <- sum(performance_data$predicted=="Yes")
predicted_negative <- sum(performance_data$predicted=="No")
total <- nrow(performance_data)
data.frame(positive, negative,predicted_positive,predicted_negative)
dataset %>% count(stroke)
dataset %>% count(heart_disease)
dataset <- read.csv("healt_data.csv", header = TRUE)
train <- sample(nrow(dataset), 0.7*nrow(dataset), replace = FALSE)
dataset <- read.csv("healt_data.csv", header = TRUE)
train <- sample(nrow(dataset), 0.7*nrow(dataset), replace = FALSE)
trainSet <- dataset[train,]
validSet <- data1[-train,]
View(trainSet)
View(trainSet)
validSet <- data1[-train,]
dataset <- read.csv("healt_data.csv", header = TRUE)
train <- sample(nrow(dataset), 0.7*nrow(dataset), replace = FALSE)
trainSet <- dataset[train,]
validSet <- dataset[-train,]
View(validSet)
View(validSet)
View(trainSet)
View(validSet)
View(validSet)
View(validSet)
install.packages("randomForest")
library(randomForest)
dataset <- read.csv("healt_data.csv", header = TRUE)
train <- sample(nrow(dataset), 0.8*nrow(dataset), replace = FALSE)
trainSet <- dataset[train,]
validSet <- dataset[-train,]
dataset <- read.csv("healt_data.csv", header = TRUE)
train <- sample(nrow(dataset), 0.8*nrow(dataset), replace = FALSE)
trainSet <- dataset[train,]
validSet <- dataset[-train,]
randomModel <- randomForest(dataset$heart_disease ~ .data = trainSet, importance = TRUE)
print(randomModel)
randomModel <- randomForest(dataset$heart_disease ~ .data = trainSet, importance = TRUE)
randomModel
trainSet <- dataset[train,]
validSet <- dataset[-train,]
randomModel <- randomForest(dataset$heart_disease ~ .,data = trainSet, importance = TRUE)
randomModel
randomModel <- randomForest(heart_disease ~ .,data = trainSet, importance = TRUE)
randomModel
predTrain <- predict(randomModel, trainSet, type = "class")
dataset <- read.csv("healt_data.csv", header = TRUE)
train <- sample(nrow(dataset), 0.8*nrow(dataset), replace = FALSE)
trainSet <- dataset[train,]
validSet <- dataset[-train,]
randomModel <- randomForest(heart_disease ~ .,data = trainSet, importance = TRUE)
randomModel
predTrain <- predict(randomModel, trainSet, type = "class")
predTrain <- predict(randomModel, trainSet, type = "class")
table(predTrain, trainSet$heart_disease)
predValid <. predict(randomModel, validSet, type="class")
predValid <- predict(randomModel, validSet, type="class")
mean(predValid == validSet$heart_disease)
mean(predValid[0])
mean(predValid[1])
mean(predValid == validSet$heart_disease)
View(trainSet)
View(trainSet)
View(validSet)
View(validSet)
dataset <- read.csv("healt_data.csv", header = TRUE)
dataset$id <- NULL
train <- sample(nrow(dataset), 0.8*nrow(dataset), replace = FALSE)
trainSet <- dataset[train,]
validSet <- dataset[-train,]
randomModel <- randomForest(heart_disease ~ .,data = trainSet, importance = TRUE)
randomModel
predTrain <- predict(randomModel, trainSet, type = "class")
table(predTrain, trainSet$heart_disease)
dataset <- read.csv("healt_data.csv", header = TRUE)
dataset$id <- NULL
train <- sample(nrow(dataset), 0.8*nrow(dataset), replace = FALSE)
trainSet <- dataset[train,]
validSet <- dataset[-train,]
randomModel <- randomForest(heart_disease ~ .,data = trainSet, importance = TRUE)
randomModel
predTrain <- predict(randomModel, trainSet, type = "class")
table(predTrain, trainSet$heart_disease)
predValid <- predict(randomModel, validSet, type="class")
mean(predValid[1])
View(dataset)
View(dataset)
dataset <- read.csv("healt_data.csv", header = TRUE)
dataset$id <- NULL
dataset$hypertension <- NULL
dataset$work_type <- NULL
dataset$Residence_type <- NULL
dataset$stroke <- NULL
train <- sample(nrow(dataset), 0.8*nrow(dataset), replace = FALSE)
trainSet <- dataset[train,]
validSet <- dataset[-train,]
randomModel <- randomForest(heart_disease ~ .,data = trainSet, importance = TRUE)
randomModel
predTrain <- predict(randomModel, trainSet, type = "class")
table(predTrain, trainSet$heart_disease)
predValid <- predict(randomModel, validSet, type="class")
mean(predValid[1])
dataset <- read.csv("healt_data.csv", header = TRUE)
dataset$id <- NULL
dataset$work_type <- NULL
dataset$Residence_type <- NULL
dataset$stroke <- NULL
train <- sample(nrow(dataset), 0.8*nrow(dataset), replace = FALSE)
trainSet <- dataset[train,]
validSet <- dataset[-train,]
randomModel <- randomForest(heart_disease ~ .,data = trainSet, importance = TRUE)
randomModel
predTrain <- predict(randomModel, trainSet, type = "class")
table(predTrain, trainSet$heart_disease)
predValid <- predict(randomModel, validSet, type="class")
mean(predValid[1])
dataset <- read.csv("healt_data.csv", header = TRUE)
dataset$id <- NULL
dataset$work_type <- NULL
dataset$Residence_type <- NULL
train <- sample(nrow(dataset), 0.8*nrow(dataset), replace = FALSE)
trainSet <- dataset[train,]
validSet <- dataset[-train,]
randomModel <- randomForest(heart_disease ~ .,data = trainSet, importance = TRUE)
randomModel
predTrain <- predict(randomModel, trainSet, type = "class")
table(predTrain, trainSet$heart_disease)
predValid <- predict(randomModel, validSet, type="class")
mean(predValid[1])
dataset$id <- NULL
dataset <- read.csv("healt_data.csv", header = TRUE)
dataset$id <- NULL
train <- sample(nrow(dataset), 0.8*nrow(dataset), replace = FALSE)
trainSet <- dataset[train,]
validSet <- dataset[-train,]
randomModel <- randomForest(heart_disease ~ .,data = trainSet, importance = TRUE)
randomModel
predTrain <- predict(randomModel, trainSet, type = "response")
table(predTrain, trainSet$heart_disease)
predValid <- predict(randomModel, validSet, type="response")
mean(predValid[1])
dataset <- read.csv("healt_data.csv", header = TRUE)
dataset$id <- NULL
dataset$hypertension <- NULL
train <- sample(nrow(dataset), 0.8*nrow(dataset), replace = FALSE)
trainSet <- dataset[train,]
validSet <- dataset[-train,]
randomModel <- randomForest(heart_disease ~ .,data = trainSet, importance = TRUE)
randomModel
predTrain <- predict(randomModel, trainSet, type = "response")
table(predTrain, trainSet$heart_disease)
predValid <- predict(randomModel, validSet, type="response")
mean(predValid[1])
dataset <- read.csv("healt_data.csv", header = TRUE)
dataset$id <- NULL
train <- sample(nrow(dataset), 0.8*nrow(dataset), replace = FALSE)
trainSet <- dataset[train,]
validSet <- dataset[-train,]
randomModel <- randomForest(heart_disease ~ .,data = trainSet, importance = TRUE)
randomModel
predTrain <- predict(randomModel, trainSet, type = "response")
table(predTrain, trainSet$heart_disease)
predValid <- predict(randomModel, validSet, type="response")
mean(predValid[1])
dataset <- read.csv("healt_data.csv", header = TRUE)
dataset$id <- NULL
train <- sample(nrow(dataset), 0.8*nrow(dataset), replace = FALSE)
trainSet <- dataset[train,]
validSet <- dataset[-train,]
randomModel <- randomForest(heart_disease ~ .,data = trainSet, importance = TRUE)
randomModel
predTrain <- predict(randomModel, trainSet, type = "class")
table(predTrain, trainSet$heart_disease)
predValid <- predict(randomModel, validSet, type="class")
mean(predValid[1])
View(dataset)
View(dataset)
dataset <- read.csv("healt_data.csv", header = TRUE)
dataset$id <- NULL
dataset$work_type <- NULL
train <- sample(nrow(dataset), 0.8*nrow(dataset), replace = FALSE)
trainSet <- dataset[train,]
validSet <- dataset[-train,]
randomModel <- randomForest(heart_disease ~ .,data = trainSet, importance = TRUE)
randomModel
predTrain <- predict(randomModel, trainSet, type = "class")
table(predTrain, trainSet$heart_disease)
predValid <- predict(randomModel, validSet, type="class")
mean(predValid[1])
dataset <- read.csv("healt_data.csv", header = TRUE)
dataset$id <- NULL
train <- sample(nrow(dataset), 0.8*nrow(dataset), replace = FALSE)
trainSet <- dataset[train,]
validSet <- dataset[-train,]
randomModel <- randomForest(heart_disease ~ .,data = trainSet, importance = TRUE)
randomModel
predTrain <- predict(randomModel, trainSet, type = "class")
table(predTrain, trainSet$heart_disease)
predValid <- predict(randomModel, validSet, type="class")
mean(predValid[1])
dataset <- read.csv("healt_data.csv", header = TRUE)
dataset$id <- NULL
train <- sample(nrow(dataset), 0.8*nrow(dataset), replace = FALSE)
trainSet <- dataset[train,]
validSet <- dataset[-train,]
randomModel <- randomForest(heart_disease ~ .,data = trainSet, importance = TRUE)
randomModel
predTrain <- predict(randomModel, trainSet, type = "class")
table(predTrain, trainSet$heart_disease)
predValid <- predict(randomModel, validSet, type="class")
mean(predValid[1])
View(dataset)
install.packages("randomForest")
install.packages("randomForest")
library(randomForest)
dataset <- read.csv("healt_data.csv", header = TRUE)
dataset$id <- NULL
train <- sample(nrow(dataset), 0.8*nrow(dataset), replace = FALSE)
trainSet <- dataset[train,]
validSet <- dataset[-train,]
randomModel <- randomForest(heart_disease ~ .,data = trainSet, importance = TRUE)
randomModel
predTrain <- predict(randomModel, trainSet, type = "class")
table(predTrain, trainSet$heart_disease)
predValid <- predict(randomModel, validSet, type="class")
mean(predValid[1])
View(dataset)
View(dataset)
dataset <- read.csv("healt_data.csv")
has_disease <- subset(dataset, dataset$heart_disease == 1)
dataset<-dataset[!(dataset$gender=="Other"),]
lm_dataset <- subset(dataset, age > 18)
split <- round(nrow(lm_dataset) * 0.80)
dtrain <- lm_dataset[1: split, ]
dtest <- lm_dataset[(split + 1):nrow(lm_dataset), ]
lmObj <- glm(heart_disease ~ gender + age + avg_glucose_level + bmi + ever_married  ,family="binomial", data = dtrain)
summary(lmObj)
options(scipen=999)
pscl::pR2(lmObj)["McFadden"]
caret::varImp(lmObj)
dtest$predict <- predict(lmObj, newdata = dtest, type="response")
dtrain$predict <- predict(lmObj, newdata = dtrain, type="response")
predicted_class <- ifelse(dtest$predict>0.3, "Yes","No")
normal_class <- ifelse(dtest$heart_disease == 1, "Yes","No")
performance_data<-data.frame(observed=normal_class,
predicted= predicted_class)
positive <- sum(performance_data$observed=="Yes")
negative <- sum(performance_data$observed=="No")
predicted_positive <- sum(performance_data$predicted=="Yes")
predicted_negative <- sum(performance_data$predicted=="No")
total <- nrow(performance_data)
data.frame(positive, negative,predicted_positive,predicted_negative)
View(dtest)
View(dtest)
dataset$stroke = NULL
dataset$smoking_status = NULL
dataset$Residence_type = NULL
dataset$work_type = NULL
View(dataset)
View(dataset)
dtest$stroke = NULL
dtest$smoking_status = NULL
dtest$Residence_type = NULL
dtest$work_type = NULL
View(dtest)
install.packages("randomForest")
library(randomForest)
install.packages("randomForest")
library(randomForest)
dataset <- read.csv("healt_data.csv", header = TRUE)
dataset$id <- NULL
train <- sample(nrow(dataset), 0.8*nrow(dataset), replace = FALSE)
trainSet <- dataset[train,]
validSet <- dataset[-train,]
randomModel <- randomForest(heart_disease ~ .,data = trainSet, importance = TRUE)
predTrain <- predict(randomModel, trainSet, type = "class")
table(predTrain, trainSet$heart_disease)
predValid <- predict(randomModel, validSet, type="class")
mean(predValid[1])
dataset <- read.csv("healt_data.csv", header = TRUE)
dataset$id <- NULL
train <- sample(nrow(dataset), 0.8*nrow(dataset), replace = FALSE)
trainSet <- dataset[train,]
validSet <- dataset[-train,]
randomModel <- randomForest(heart_disease ~ .,data = trainSet, importance = TRUE)
predTrain <- predict(randomModel, trainSet, type = "class")
table(predTrain, trainSet$heart_disease)
predValid <- predict(randomModel, validSet, type="class")
mean(predValid[1])
install.packages("randomForest")
install.packages("randomForest")
library(randomForest)
dataset <- read.csv("healt_data.csv", header = TRUE)
dataset$id <- NULL
train <- sample(nrow(dataset), 0.8*nrow(dataset), replace = FALSE)
trainSet <- dataset[train,]
validSet <- dataset[-train,]
randomModel <- randomForest(heart_disease ~ .,data = trainSet, importance = TRUE)
predTrain <- predict(randomModel, trainSet, type = "class")
table(predTrain, trainSet$heart_disease)
predValid <- predict(randomModel, validSet, type="class")
mean(predValid[1])
dataset <- read.csv("healt_data.csv", header = TRUE)
dataset$id <- NULL
train <- sample(nrow(dataset), 0.8*nrow(dataset), replace = FALSE)
trainSet <- dataset[train,]
validSet <- dataset[-train,]
randomModel <- randomForest(heart_disease ~ .,data = trainSet, importance = TRUE)
predTrain <- predict(randomModel, trainSet, type = "class")
table(predTrain, trainSet$heart_disease)
predValid <- predict(randomModel, validSet, type="class")
mean(predValid[1])
dataset <- read.csv("healt_data.csv", header = TRUE)
dataset$id <- NULL
train <- sample(nrow(dataset), 0.8*nrow(dataset), replace = FALSE)
trainSet <- dataset[train,]
validSet <- dataset[-train,]
randomModel <- randomForest(heart_disease ~ .,data = trainSet, importance = TRUE)
predTrain <- predict(randomModel, trainSet, type = "class")
table(predTrain, trainSet$heart_disease)
predValid <- predict(randomModel, validSet, type="class")
mean(predValid[1])
randomModel
health_data <- read.csv("healt_data.csv")
health_data<-health_data[!(health_data$gender=="Other"),]
health_data <- read.csv("healt_data.csv")
health_data<-health_data[!(health_data$gender=="Other"),]
set.seed(2343)
vars.to.use<-cbind(as.numeric(health_data$age),as.numeric(health_data$avg_glucose_level))
wcss <- vector()
for(i in 1:20){wcss[i] <- sum(kmeans(vars.to.use, i)$withinss)}
ggplot() + geom_point(aes(x = 1:20, y = wcss), color = 'black') + geom_line(aes(x = 1:20, y = wcss), color = 'black') +  ggtitle("Método del Codo") +  xlab('Cantidad de Centroides k') +  ylab('WCSS')
pclusters<-kmeans(vars.to.use, 4,  nstart=100, iter.max=1000)
plot(vars.to.use[,2], vars.to.use[,1], pch= 19,  col = pclusters$cluster, xlab="Hypertension",  ylab="Age",main="Agrupamiento Hypertension vs Age")
health_data<-health_data[!(health_data$gender=="Other"),]
set.seed(2343)
vars.to.use<-cbind(as.numeric(health_data$age),as.numeric(health_data$avg_glucose_level))
wcss <- vector()
for(i in 1:20){wcss[i] <- sum(kmeans(vars.to.use, i)$withinss)}
ggplot() + geom_point(aes(x = 1:20, y = wcss), color = 'black') + geom_line(aes(x = 1:20, y = wcss), color = 'black') +  ggtitle("Método del Codo") +  xlab('Cantidad de Centroides k') +  ylab('WCSS')
pclusters<-kmeans(vars.to.use, 4,  nstart=100, iter.max=1000)
plot(vars.to.use[,2], vars.to.use[,1], pch= 19,  col = pclusters$cluster, xlab="Average Glucose Level",  ylab="Age",main="Agrupamiento Average Glucose Level vs Age")
health_data <- read.csv("healt_data.csv")
health_data<-health_data[!(health_data$gender=="Other"),]
set.seed(2343)
vars.to.use<-cbind(as.numeric(health_data$age),as.numeric(health_data$bmi))
wcss <- vector()
for(i in 1:20){wcss[i] <- sum(kmeans(vars.to.use, i)$withinss)}
ggplot() + geom_point(aes(x = 1:20, y = wcss), color = 'black') + geom_line(aes(x = 1:20, y = wcss), color = 'black') +  ggtitle("Método del Codo") +  xlab('Cantidad de Centroides k') +  ylab('WCSS')
pclusters<-kmeans(vars.to.use, 4,  nstart=100, iter.max=1000)
plot(vars.to.use[,2], vars.to.use[,1], pch= 19,  col = pclusters$cluster, xlab="BMI",  ylab="Age",main="Agrupamiento BMI vs Age")
